import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.util.HashMap;
import java.util.Map;

import org.json.JSONArray;
import org.json.JSONObject;

import com.google.gson.*;
import com.google.gson.reflect.*;

public class APIRequest {

	Object curr_temp;
	Object curr_temp_feel;
	Object temp_min;
	Object temp_max;
	Object humidity;
	Object wind_speed;
	Object cloud_coverage;
	Object longitude;
	Object latitude;
	Object cityName;
	String weather_dis;
	String[] resultStrs = new String[7];

	
	final String UrlString = "http://api.openweathermap.org/data/2.5/weather?";
	final String appid = "&appid=7b4f07573c184034f4d2230c7d5046b6&units=imperial";

	public static Map<String, Object> jsonToMap(String str) {
		Map<String, Object> map = new Gson().fromJson(str, new TypeToken<HashMap<String, Object>>() {
		}.getType());
		return map;
	}

	/* ** API calls ***/
	public String useZip(String zip, String country) {
		return UrlString + "zip=" + zip + "," + country + appid;
	}

	public String useCoords(String lat, String lon) {
		return UrlString + "lat=" + lat + "&lon=" + lon + appid;
	}

	public String useCityID(String id) {
		return UrlString + "id=" + id + appid;
	}

	public String useCity(String city, String state) {
		return UrlString + "q=" + city + "," + state + appid;
	}
	/* *******************/

	public void getWeatherCurr(String zipCode, String countryCode) {

		String urlToRequest = useZip(zipCode, countryCode);
		StringBuilder weatherInfoJson = new StringBuilder();

		try {
			// format desired url
			URL url = new URL(urlToRequest); 
			// open connection
			URLConnection url_conn = url.openConnection();
			// create input stream from connection
			InputStreamReader is = new InputStreamReader(url_conn.getInputStream()); 
			// create buffer to read in entire input stream				
			BufferedReader br = new BufferedReader(is); 
			String line;
			/***
			 * While there are still lines of info to read, read them in and add them all to a string called 
			 * 'weather_info' (weather_infois a string builder to allow creation of one big string). 
			 */
			while ((line = br.readLine()) != null) { 
				weatherInfoJson.append(line); 
			} 
			// Once info is all taken, close the stream reader.
			br.close(); 

			// map info from json file
			Map<String, Object> weatherInfoMap = jsonToMap(weatherInfoJson.toString()); 
			Map<String, Object> coordMap = jsonToMap(weatherInfoMap.get("coord").toString());
			Map<String, Object> mainMap = jsonToMap(weatherInfoMap.get("main").toString()); 
			Map<String, Object> windMap = jsonToMap(weatherInfoMap.get("wind").toString()); 
			Map<String, Object> cloudsMap = jsonToMap(weatherInfoMap.get("clouds").toString());
			//Map<String, Object> description = jsonToMap(weatherInfoMap.get("weather").toString());
			//System.out.println(description);
			
			curr_temp = mainMap.get("temp");
			curr_temp_feel = mainMap.get("feels_like");
			temp_min = mainMap.get("temp_min");
			temp_max = mainMap.get("temp_max");
			humidity = mainMap.get("humidity");
			wind_speed = windMap.get("speed");
			cloud_coverage = cloudsMap.get("all");
			longitude = coordMap.get("lon");
			latitude = coordMap.get("lat");
			cityName = weatherInfoMap.get("name");
			

		} catch (Exception e) {
			System.out.println(e);
		}
	}

	public void getOneshot(String zipCode, String countryCode) {
		// get current weather to find lon&lat
		this.getWeatherCurr(zipCode, countryCode);
		
		// Everything here is built from getWeatherCurrent(int, String) function
		String urlToRequest = "https://api.openweathermap.org/data/2.5/onecall?lat=" + latitude + "&lon=" + longitude + "&exclude=current" + appid;
		StringBuilder weatherInfoJson = new StringBuilder();

		try {	

			URL url = new URL(urlToRequest);
			URLConnection url_conn = url.openConnection();
			InputStreamReader is = new InputStreamReader(url_conn.getInputStream());
			BufferedReader br = new BufferedReader(is);
			String line;
			while ((line = br.readLine()) != null) {
				weatherInfoJson.append(line);
			}
			br.close();

			// Map out data
			Map<String, Object> weatherInfoMap = jsonToMap(weatherInfoJson.toString());
			
			// currently just prints out the data to show structure
			//System.out.println(weatherInfoMap);
			String weather = weatherInfoJson.toString();
			
			//used to extract information
			final String OWM_LIST = "daily";
		    final String OWM_WEATHER = "weather";
		    final String OWM_TEMPERATURE = "temp";
		    final String OWM_MAX = "max";
		    final String OWM_MIN = "min";
		    final String OWM_DESCRIPTION = "main"; 

		    JSONObject forecastJson = new JSONObject(weather);
	        JSONArray weatherArray = forecastJson.getJSONArray(OWM_LIST);
	         
//	        int numDays = 7;
//			String[] resultStrs = new String[numDays];
			
	        for(int i = 0; i < weatherArray.length(); i++) {
	            // For now, using the format "Day, description, hi/low"
	            String day;
	            String description;
	 
	            // Get the JSON object representing the day
	            JSONObject dayForecast = weatherArray.getJSONObject(i);
	 
	            // description is in a child array called "weather", which is 1 element long.
	            JSONObject weatherObject = dayForecast.getJSONArray(OWM_WEATHER).getJSONObject(0);
	            description = weatherObject.getString(OWM_DESCRIPTION);
	 
	            // Temperatures are in a child object called "temp".  Try not to name variables
	            // "temp" when working with temperature.  It confuses everybody.
	            JSONObject temperatureObject = dayForecast.getJSONObject(OWM_TEMPERATURE);
	            double high = temperatureObject.getDouble(OWM_MAX);
	            double low = temperatureObject.getDouble(OWM_MIN);
	 
	            resultStrs[i] = "day " + i + ", " + description + " - " + high + low;
	            
	            System.out.println(resultStrs[i]);
	        }
		} 
		catch (Exception e) {
			System.out.println(e);
		}
	}
}
